{"version":3,"sources":["constants.js","Header.js","Footer.js","SignIn.js","Navigation.js","Home.js","ExerciseTable.js","Exercise.js","DataTable.js","InputTable.js","Settings.js","SignUp.js","App.js","serviceWorker.js","index.js"],"names":["ROUTES","Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","Component","Footer","react_default","a","createElement","href","aria-label","SignIn","props","_this","call","state","email","password","isLoggedIn","_this2","authUnlisten","firebase","auth","onAuthStateChanged","user","setState","Redirect","to","_this3","signInWithEmailAndPassword","then","pass","catch","err","errorMessage","message","event","field","target","name","changes","_this4","array","class","label","title","type","className","placeHolder","map","d","htmlFor","placeholder","onInput","handleChange","id","role","alt","Header_Header","onClick","handleSignIn","Link","Footer_Footer","Navigation","toggle","bind","assertThisInitialized","isOpen","logOut","signOut","reactstrap_es","light","expand","replace","navbar","Home","Navigation_Navigation","ExerciseTable","data","totalCalories","left","subEmail","first","substr","indexOf","database","ref","on","snapshot","snap","val","values","keys","i","length","header","accessor","filterAll","filterMethod","filter","rows","matchSorter","columns","react_table_es","defaultPageSize","defaultSorted","desc","filterable","defaultFilterMethod","row","String","showPaginationTop","noDataText","Exercise","exercise","exercises","labels","datasets","backgroundColor","hoverBackgroundColor","handleClick","changeExercise","currentCals","e","preventDefault","fetchData","history","push","fetch","method","headers","x-app-id","x-app-key","Content-Type","body","JSON","stringify","query","gender","weight_kg","height_cm","age","response","json","currLabels","currCalories","currData","currColors","forEach","element","newColor","Math","random","toString","nf_calories","calories","error","console","Exercise_BigForm","click","update","ExerciseTable_ExerciseTable","es","BigForm","for","Exercise_InputArea","InputArea","onChange","DataTable","today","renderEditable","deleteRow","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","total","item","Number","cellInfo","reference","style","contentEditable","suppressContentEditableWarning","onBlur","toConsumableArray","child","index","column","set","innerHTML","dangerouslySetInnerHTML","__html","original","remove","regArray","cell","Cell","sortable","width","minWidth","maxWidth","InputTable","meal","date","mealType","divClassName","handleSubmit","DataTable_DataTable","Settings","weight","height","cal","cancel","settings","Name","Gender","Weight","Height","Age","Calories","undefined","result","round","forms","setting","attribute","min","step","check","updateSettings","SignUp","fullName","userName","includes","createUserWithEmailAndPassword","handleAdd","newData","Author","required","handleSignUp","App","HashRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f224342.chunk.js","sourcesContent":["export const ROUTES = {\n    SignIn: \"/SignIn\",\n    SignUp: \"/SignUp\",\n    Home: \"/Home\", \n    Exercise: \"/Exercise\",\n    Settings: \"/Settings\",\n    Table: \"/Table\"\n}\n","import { Component } from 'react';\n// import { ROUTES } from './constants';\nimport './App.css';\n\nexport class Header extends Component {\n    render() {\n        return (\n            \"\"\n            /* <header onClick={() => window.location=ROUTES.Home}>\n                <h1 className=\"title text-uppercase\">Fitness Tracker</h1>\n            </header> */\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\n\nexport class Footer extends Component {\n    render() {\n      return (\n          <footer>\n            <p>Created By: Ray Zhang, Alexis Choi, Soobin Kwon, and Maura Cassidy</p>\n            <p>&copy; Copyright 2018 </p>\n            <p>Contact Information: <a href=\"mailto:fitnesstracker\" aria-label=\"email\"> fitness_tracker@gmail.com</a></p>\n          </footer>\n  \n      )\n    }\n  }","import React, { Component } from 'react';\nimport { ROUTES } from './constants';\nimport { Link, Redirect } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Header } from './Header';\nimport { Footer } from './Footer';\nimport './SignIn.css';\n\nimport './App.css';\n\nexport class SignIn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            isLoggedIn: false\n        }\n    }\n\n    componentDidMount() {\n        this.authUnlisten = firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                let email = user.email;\n                this.setState({\n                    email: email,\n                    isLoggedIn: true\n                })\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.authUnlisten();\n    }\n\n    pass() {\n        return <Redirect to={ROUTES.Home} />\n    }\n\n    handleSignIn() {\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\n            .then(() => this.pass())\n            .catch((err) => {\n                this.setState({ errorMessage: err.message });\n            });\n    }\n\n    handleChange(event) {\n        let field = event.target.name; // which input\n        let value = event.target.value; // what value\n\n        let changes = {}; // object to hold changes\n        changes[field] = value; // change this field\n        this.setState(changes); // update state\n    }\n\n    render() {\n        if (this.state.isLoggedIn === true) {\n            return <Redirect to={ROUTES.Home} />\n        }\n\n        let forms = [{ class: \"form-group-one-signin\", label: \"email-input\", title: \"Email\", name: \"email\", type: \"text\", className: \"Form-control\", placeHolder: \"[Email Address]\" },\n        { class: \"form-group-two-signin\", label: \"password-input\", title: \"Password\", name: \"password\", type: \"password\", className: \"Form-control\", placeHolder: \"[Password]\" },]\n        \n        let array = forms.map((d) => {\n            return <div className={d.class}>\n                <label className={d.label} htmlFor={d.name}>{d.title}</label>\n                <input type={d.type}\n                    className={d.className}\n                    name={d.name}\n                    placeholder={d.placeHolder}\n                    onInput={(event) => { this.handleChange(event) }}>\n                </input>\n            </div>\n        })\n\n        return (\n            <div>\n\n            <div id=\"signin-image\" role=\"img\" alt =\"signin image\" aria-label=\"Textual Description\">\n            <h1 id=\"signin-title\"><strong>Fitness Tracker</strong></h1> \n            </div>\n\n                <Header />\n                <div className=\"text\">\n                    <div>{array[0]}</div>\n                    <div>{array[1]}</div>\n                    <div onClick={() => this.handleSignIn()}>\n                        <button type=\"submit\" className=\"btn btn-primary\" aria-label=\"Log In\">SIGN IN</button>\n                    </div>\n                    <p>New to Fitness Tracker? <Link to={ROUTES.SignUp}> Sign Up! </Link> </p>\n                </div>\n                \n                <Footer />\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Navbar, NavbarToggler, Collapse, Nav, NavItem } from 'reactstrap';\nimport { Link, Redirect } from 'react-router-dom';\nimport { ROUTES } from './constants';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport './App.css';\n\nexport class Navigation extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this.toggle.bind(this);\n\n        this.state = {\n            isOpen: false,\n            isLoggedIn: true\n        };\n        this.logOut = this.logOut.bind(this)\n    }\n\n    omponentWillMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.setState({\n                    isLoggedIn: true\n                })\n            }\n        });\n    }\n\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    logOut() {\n        firebase.auth().signOut()\n        this.setState({\n            isLoggedIn: false\n        })\n    }\n\n\n    render() {\n        if (this.state.isLoggedIn === false) {\n            return <Redirect to={ROUTES.SignIn} />\n        }\n        return (\n            <div>\n                <Navbar className=\"navBar\" light expand=\"md\">\n\n                    <div id=\"navbar-brand\">\n                        <Link to={ROUTES.Home} id=\"link\" replace> FITNESS TRACKER</Link>\n                    </div>\n\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"mr-auto\" navbar>\n                            <NavItem>\n                                <Link to={ROUTES.Home} id=\"link\" replace>Home</Link>\n                            </NavItem>\n                            <NavItem>\n                                <Link to={ROUTES.Table} id=\"link\" replace>Calorie Tracker</Link>\n                            </NavItem>\n                            <NavItem>\n                                <Link to={ROUTES.Exercise} id=\"link\" replace>Exercise Recorder</Link>\n                            </NavItem>\n                            <NavItem>\n                                <Link to={ROUTES.Settings} id=\"link\" replace>Settings</Link>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                    <div onClick={() => this.logOut()}>\n                        <Link to={ROUTES.SignIn}><button id=\"sign-out\" type=\"button\">SIGN OUT</button></Link>\n                    </div>\n                </Navbar>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Navigation } from './Navigation';\nimport { Header } from './Header';\nimport { Footer } from './Footer';\nimport './Home.css';\n\nexport class Home extends Component {\n  render() { \n    return (\n      <div>\n        <Navigation />\n        <Header />\n\n        <div id=\"image\" role=\"img\" alt =\"fitness image\" aria-label=\"Textual Description\"></div>\n\n\n        <div className='text'>\n\n          <h1>Exercise and Nutrition</h1>\n          <p>\n            Nutrition and exercise are very important aspects of life. </p>\n          <p>\n            Any healthy individual would be mindful of how they eat, and exercise on a daily basis.\n            However, many individuals today struggle to maintain a healthy lifestyle,\n            neglecting either their nutrition or exercise. \n            With many suffering with the consequences of an unhealthy lifestyle,\n            the need for proper information on how to take care of oneself is very helpful.\n            There is so much information on the internet for proper exercise and nutrition,\n            but it is very scattered and many people struggle to find information that is very simple and easy to consume.\n            </p>\n          <p>\n            Our team has a strong interest in exercise and would love to be able to <strong>easily track our goals virtually</strong> in order\n            to help us learn more about our health.\n            There are many sites that help with tracking health goals today including a calorie tracker, workouts, and weight.\n            However, we felt that most of these sites are not user-friendly for users\n            to accurately track their goals based on their own body and needs.\n            There are many factors that go into fitness goals, and a web app that would allow users to <strong>easily\n            input their information</strong> and <strong>see detailed,\n            but well-designed information</strong> to get them on track would be great.\n            Some people might also want to come up with workout routines that are specific to certain areas of the body,\n            or with other specific goals.\n            These are all issues that could be solved with a good web application.\n            </p>\n        </div>\n        <Footer />\n      </div >\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport ReactTable from \"react-table\";\nimport 'react-table/react-table.css'\nimport matchSorter from 'match-sorter'\n\nexport class ExerciseTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            totalCalories: 0,\n            left: 0,\n            email: \"\",\n            subEmail: \"\",\n            // today: \"\",\n            first: true\n        }\n    }\n\n    componentWillMount() {\n        this.authUnlisten = firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n\n                this.setState({\n                    email: user.email,\n                    subEmail: user.email.substr(0, user.email.indexOf('@')),\n                })\n\n                let data = []\n\n                let reference = firebase.database().ref('Profile/' + this.state.subEmail + '/Exercises');\n                reference.on('value', (snapshot) => {\n                    let snap = snapshot.val();\n                    if (snap !== null) {\n                        data = Object.values(snap);\n                        let keys = Object.keys(snap);\n\n                        for (let i = 0; i < data.length; i++) {\n                            data[i].keys = keys[i];\n                        }\n\n                        this.setState({\n                            data: data\n                        })\n                    } else {\n                        this.setState({\n                            data: []\n                        })\n                    }\n                })\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.authUnlisten();\n    }\n\n    render() {\n        let titles = [{ header: 'Exercise', accessor: 'exercise', id: 'exercise', filterAll: true },\n        { header: 'Calories', accessor: 'calories', id: 'calories', filterAll: true }]\n\n        let array = titles.map((d) => {\n            return {\n                Header: d.header,\n                accessor: d.accessor,\n                id: d.id,\n                filterAll: d.filterAll,\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, { keys: [d.id] })\n            }\n        })\n\n        let columns = [\n            array[0],\n            array[1]\n        ]\n        return (\n            <div className=\"reactTable\" aria-label=\"Exercise and Calorie Recorder\">\n                <ReactTable\n                    className=\"-striped -highlight\"\n                    columns={columns}\n                    data={this.state.data}\n                    defaultPageSize={5}\n                    defaultSorted={[\n                        {\n                            desc: true\n                        }\n                    ]}\n                    filterable\n                    defaultFilterMethod={(filter, row) =>\n                        String(row[filter.id]) === filter.value}\n                    showPaginationTop\n                    noDataText={\"Please Input Exercises Above...\"}>\n                </ReactTable>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Button, FormGroup, Label, Input } from 'reactstrap';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { ROUTES } from './constants';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Header } from './Header';\nimport { Footer } from './Footer';\nimport { Navigation } from './Navigation';\nimport { ExerciseTable } from './ExerciseTable';\nimport './Exercise.css';\n\nexport class Exercise extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      exercise: 'sleep for 0 minutes',\n      exercises: [],\n      email: \"\",\n      data: {\n        labels: [\n\n        ],\n        datasets: [{\n          data: [],\n          backgroundColor: [\n          ],\n          hoverBackgroundColor: [\n          ]\n        }]\n      },\n      totalCalories: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.changeExercise = this.changeExercise.bind(this);\n  }\n\n  changeExercise(event) {\n    this.setState({ exercise: event.target.value });\n  }\n\n  updateCalories(event) {\n    let currentCals = this.state.totalCalories;\n    currentCals += event.target.value;\n    this.setState({ totalCalories: currentCals });\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.fetchData();\n  }\n\n  componentDidMount() {\n    this.authUnlisten = firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({\n          email: user.email\n        })\n      } else {\n        return this.props.history.push(ROUTES.SignIn);\n      }\n    });\n  }\n\n  fetchData() {\n    return fetch('https://trackapi.nutritionix.com/v2/natural/exercise', {\n      method: 'post',\n      headers: {\n        'x-app-id': 'bfbe68de',\n        'x-app-key': '956c67f76ec3a67a0db5f5ab7f998b33',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'query': this.state.exercise,\n        'gender': 'female',\n        'weight_kg': 72.5,\n        'height_cm': 167.64,\n        'age': 30\n      })\n    })\n      .then(function (response) {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ exercises: data.exercises });\n        let currLabels = this.state.data.labels;\n        let currCalories = 0;\n        let currData = this.state.data.datasets[0].data;\n        let currColors = this.state.data.datasets[0].backgroundColor;\n        //let newColr = '#'+(Math.random()*0xFFFFFF<<0).toString(16);\n        this.state.exercises.forEach(function (element) {\n          let newColor = '#' + (Math.random() * 0xFFFFFF << 0).toString(16);\n          currLabels.push(element.name);\n          currCalories += element.nf_calories;\n          currData.push(element.nf_calories);\n          currColors.push(newColor);\n        });\n        this.setState({\n          data: {\n            labels: currLabels,\n            datasets: [{\n              data: currData,\n              backgroundColor: ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6',\n                '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\n                '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A',\n                '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\n                '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC',\n                '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\n                '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680',\n                '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\n                '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3',\n                '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'],\n              hoverBackgroundColor: ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6',\n                '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\n                '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A',\n                '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\n                '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC',\n                '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\n                '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680',\n                '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\n                '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3',\n                '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF']\n            }]\n          }\n        });\n        this.setState({ totalCalories: currCalories });\n        let email = this.state.email;\n        let subEmail = email.substr(0, email.indexOf('@'));\n        let reference = firebase.database().ref('Profile/' + subEmail + '/Exercises');\n        reference.push({\n            exercise: this.state.exercise,\n            calories: this.state.totalCalories\n        });\n\n\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Header />\n\n      <div id=\"activity-image\" role=\"img\" aria-label=\"Textual Description\" alt=\"activity image\"></div>\n\n        <div className='text'>\n        <h1> How active were you today? </h1>\n\n        <p>This chart acts as both an exercise diary and calorie tracker that allow users to easily input \n          the exercise and calories that they perform. </p> \n\n          <p> The input box requires users to write in <strong> natural\n          language</strong> format. For example, you can simply type in <i>\"Ran for 20 minutes and boxed for an hour\"</i> and we will calculate the result for you. </p> \n          <p>The exercise and calories burned\n          for each exercise that the user records will be put into the table below. </p>\n          <p>There will be a <strong>doughnut chart</strong> that gets created at the bottom of the page when the user enters their exercises in order \n          to show a visualiztion of the duration of exercises that a user inputs in that current session.</p>\n          <p>\n          Although the visualization will not be saved everyday, the chart will still contain every entry that the user\n          has inputted. This is because we think this data may be valuable for users as they can reflect and compare on \n          their past exercises and possibly even notice trends over time. The table allows users to filter through each column by typing \n          out what they are searching for and or changing the order of each column by clicking on the column titles. \n        </p>\n          <BigForm click={this.handleClick} update={this.changeExercise} />\n          <ExerciseTable />\n          <Doughnut data={this.state.data} />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nclass BigForm extends Component {\n  render() {\n    return (\n      <FormGroup>\n        <Label for=\"exerciseText\">Tell me how you exercised below! </Label>\n        <InputArea update={this.props.update} />\n        <Button onClick={this.props.click}>SUBMIT</Button>\n      </FormGroup>\n    );\n  }\n}\n\nclass InputArea extends Component {\n  render() {\n    return (\n      <Input type=\"textarea\" name=\"text\" id=\"exerciseText\" onChange={this.props.update} placeholder='sleep for 0 minutes' />\n    );\n  }\n}","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport ReactTable from \"react-table\";\nimport 'react-table/react-table.css'\nimport matchSorter from 'match-sorter'\n\n\nexport class DataTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            totalCalories: 0,\n            left: 0,\n            email: \"\",\n            subEmail: \"\",\n            today: \"\"\n        }\n        this.renderEditable = this.renderEditable.bind(this);\n        this.deleteRow = this.deleteRow.bind(this);\n    }\n\n    componentWillMount() {\n        this.authUnlisten = firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.setState({\n                    email: user.email,\n                    subEmail: user.email.substr(0, user.email.indexOf('@'))\n                })\n\n                let data = []\n\n                let today = new Date();\n                let dd = today.getDate();\n                let mm = today.getMonth();\n                let yyyy = today.getFullYear();\n\n                today = [mm + 1] + '/' + dd + '/' + yyyy;\n\n                this.setState({\n                    today: today\n                })\n\n                let leftCal = firebase.database().ref('Profile/' + this.state.subEmail + '/Author/Calories');\n                leftCal.on('value', (snapshot) => {\n                    let snap = snapshot.val();\n                    this.setState({\n                        left: snap\n                    })\n                })\n\n                let reference = firebase.database().ref('Profile/' + this.state.subEmail + '/Meals');\n                reference.on('value', (snapshot) => {\n                    let snap = snapshot.val();\n                    if (snap !== null) {\n                        data = Object.values(snap);\n                        let keys = Object.keys(snap);\n\n                        // Step 1: add the id (\"key\") to each object in data array\n                        for (let i = 0; i < data.length; i++) {\n                            data[i].keys = keys[i];\n                        }\n\n                        let total = 0;\n\n                        data.map((item) => {\n                            if (item[\"date\"] === today) {\n                                total += Number(item[\"calories\"])\n                            }\n                            return null\n                        })\n\n                        this.setState({\n                            data: data,\n                            totalCalories: total\n                        })\n                    } else {\n                        this.setState({\n                            data: [],\n                            totalCalories: 0\n                        })\n                    }\n                })\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.authUnlisten();\n    }\n\n    renderEditable(cellInfo) {\n        let reference = firebase.database().ref('Profile/' + this.state.subEmail + '/Meals');\n\n        return (\n            <div\n                style={{ backgroundColor: \"#fafafa\" }}\n                contentEditable\n                suppressContentEditableWarning\n                onBlur={e => {\n                    const data = [...this.state.data];\n\n                    // make a reference to a specific key\n                    let key = reference.child(data[cellInfo.index].keys)\n                    // update value in each cell in database too\n                    key.child(cellInfo.column.id).set(e.target.innerHTML)\n\n                    data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n\n                    this.setState({ data });\n                }}\n                dangerouslySetInnerHTML={{\n                    __html: this.state.data[cellInfo.index][cellInfo.column.id]\n                }}\n            />\n        )\n    }\n\n    deleteRow(props) {\n        let row = props.original.keys\n        let reference = firebase.database().ref('Profile/' + this.state.subEmail + '/Meals');\n        reference.child(row).remove()\n    }\n\n    render() {\n        let reg = [{ header: 'Date', accessor: 'date', id: \"date\", filterAll: true, cell: null},\n        { header: 'Meal Type', accessor: 'mealType', id: 'mealType', filterAll: true, cell: null },\n        { header: 'Meal', accessor: 'meal', id: \"meal\", filterAll: true, cell: this.renderEditable }]\n\n        // let edit = [{ header: 'Meal', accessor: 'meal', id: \"meal\", filterAll: true, cell: this.renderEditable },\n        // { header: 'Calories', accessor: 'calories', id: \"calories\", filterAll: true, cell: this.renderEditable }]\n\n\n        let regArray = reg.map((d) => {\n            return {\n                Header: d.header,\n                accessor: d.accessor,\n                id: d.id,\n                filterAll: d.filterAll,\n                Cell: d.cell,\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, { keys: [d.id] })\n            }\n        })\n        \n        let columns = [\n            regArray[0],\n            regArray[1],\n            regArray[2],\n            {\n                Header: 'Calories',\n                accessor: 'calories',\n                id: \"calories\",\n                filterMethod: (filter, rows) =>\n                    matchSorter(rows, filter.value, { keys: [\"calories\"] }),\n                filterAll: true,\n                Cell: this.renderEditable,\n                Footer: (\n                    <div>\n                        <span><strong>{this.state.today}</strong></span>\n                        <br />\n                        <br />\n                        <span>\n                            <strong>Total Calorie Intake {<br />} for the Day: </strong>{\" \"}\n                            {this.state.totalCalories}\n                        </span>\n                        <br />\n                        <br />\n                        <span>\n                            <strong>Leftover Calories{<br />} for the Day: </strong>{\" \"}\n                            {this.state.left - this.state.totalCalories}\n                        </span>\n                    </div>\n                ),\n\n            },\n            {\n                Header: 'Actions',\n                Cell: props => {\n                    return (\n                        <button className=\"btn btn-default\"\n                            onClick={() => {\n                                this.deleteRow(props)\n                            }}>DELETE</button>\n                    )\n                },\n                sortable: false,\n                filterable: false,\n                width: 100,\n                minWidth: 100,\n                maxWidth: 100\n            }\n        ]\n        return (\n            <div className=\"reactTable\" aria-label=\"Meals and Calorie Recorder\">\n                <ReactTable\n                    className=\"-striped -highlight\"\n                    columns={columns}\n                    data={this.state.data}\n                    defaultPageSize={5}\n                    defaultSorted={[\n                        {\n                            id: \"date\",\n                            desc: true\n                        }\n                    ]}\n                    filterable\n                    defaultFilterMethod={(filter, row) =>\n                        String(row[filter.id]) === filter.value}\n                    showPaginationTop\n                    noDataText={\"Please Input Meals Above...\"}>\n                </ReactTable>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Navigation } from './Navigation';\nimport { Header } from './Header';\nimport { Footer } from './Footer';\nimport { DataTable } from './DataTable';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './InputTable.css';\n\nexport class InputTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            meal: \"\",\n            calories: 0,\n            value: \"Snack\",\n            today: \"\"\n        }\n    }\n\n    componentDidMount() {\n        this.authUnlisten = firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    email: user.email\n                })\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.authUnlisten();\n    }\n\n    handleSubmit() {\n        let today = new Date();\n        let dd = today.getDate();\n        let mm = today.getMonth();\n        let yyyy = today.getFullYear();\n\n        today = [mm + 1] + '/' + dd + '/' + yyyy;\n\n        let email = this.state.email;\n        let subEmail = email.substr(0, email.indexOf('@'));\n\n        // Add elements that user inputted into firebase database \n        let reference = firebase.database().ref('Profile/' + subEmail + '/Meals');\n        reference.push({\n            date: today,\n            mealType: this.state.value,\n            meal: this.state.meal,\n            calories: this.state.calories\n        })\n\n        this.setState({\n            value: \"Snack\"\n        })\n\n        // document.getElementById(\"meal\").value = \"\";\n        // document.getElementById(\"calories\").value = \"\";\n        // document.getElementById(\"mealType\").value = this.state.value;\n    }\n\n    handleChange(event) {\n        let field = event.target.name; // which input\n        let value = event.target.value; // what value\n\n        let changes = {}; // object to hold changes\n        changes[field] = value; // change this field\n        this.setState(changes); // update state\n    }\n\n    render() {\n\n        let forms = [{ title: \"Meal:\", divClassName: \"flex-start\", type: \"text\", className: \"form-control\", id: \"meal\", name: \"meal\", placeholder: \"[Meal]\" },\n        { title: \"Calories:\", divClassName: \"flex-start\", type: \"number\", className: \"form-control\", id: \"calories\", name: \"calories\", placeholder: \"0\" }]\n\n\n        let array = forms.map((d) => {\n            return <div className={d.divClassName}>\n                <p>{d.title}</p>\n                <input type={d.type}\n                    className={d.className}\n                    id={d.id}\n                    name={d.name}\n                    placeholder={d.placeholder}\n                    onInput={(event) => { this.handleChange(event) }}>\n                </input>\n            </div>\n        })\n\n        return (\n            <div>\n                <Navigation />\n                <Header />\n\n                <div id=\"food-image\" role=\"img\" aria-label=\"Textual Description\" alt=\"food image\"></div>\n\n                <div className='text'>\n                <h1>Food Diary</h1>\n                    <p>This chart acts as both a food diary and calorie tracker that allow users to easily input\n                        the food and calories that they consume everyday. Users can add any snacks and meals\n                        that they ate and the calories that go with it. The total calories that the\n                        user has eaten everyday will appear at the bottom right corner of the chart including the \"leftover\n                        calories\" that the user has in order to maintain their basic metabolic rate for that day.\n                        These calculations will restart everyday, while still allowing users to see and reflect on their\n                        previous food entries. This chart allows users to filter every column by typing\n                        out what they are searching for and or change how the chart has been sorted through by clicking on the\n                        column titles. The user is also allowed to delete and edit the meal name and calories on whichever row they choose\n                        to edit.</p>\n\n                    <p>NOTE: Users may need to scroll left on mobile devices to view the entire table.</p>\n                    <div className=\"flex-start\">\n                        <h3> Pick a Meal Type: </h3>\n                        <select\n                            id=\"mealType\"\n                            value={this.state.value}\n                            onChange={event =>\n                                this.setState({\n                                    value: event.target.value\n                                })}>\n                            <option value=\"Snack\">Snack</option>\n                            <option value=\"Breakfast\">Breakfast</option>\n                            <option value=\"Lunch\">Lunch</option>\n                            <option value=\"Dinner\">Dinner</option>\n                            <option value=\"Dessert\">Dessert</option>\n                        </select>\n                    </div>\n                    <div>{array[0]}</div>\n                    <div>{array[1]}</div>\n                    <div onClick={event => this.handleSubmit(event)}>\n                        <button type=\"submit\" className=\"btn btn-default\" aria-label=\"Submit\">SUBMIT</button>\n                    </div>\n\n                    <DataTable />\n                </div>\n\n                <Footer />\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Navigation } from './Navigation';\nimport { Header } from './Header';\nimport { Footer } from './Footer';\nimport { FormGroup, Label } from 'reactstrap';\nimport { ROUTES } from './constants';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Redirect, Link } from 'react-router-dom';\nimport './Settings.css';\n\nexport class Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            gender: '',\n            email: '',\n            subEmail: '',\n            weight: 0,\n            height: 0,\n            age: 0,\n            cal: 0\n        }\n        this.cancel = this.cancel.bind(this)\n    }\n\n    componentWillMount() {\n        this.authUnlisten = firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.setState({\n                    email: user.email,\n                    subEmail: user.email.substr(0, user.email.indexOf('@'))\n                })\n\n                let reference = firebase.database().ref('Profile/' + this.state.subEmail + '/Author');\n                reference.on('value', (snapshot) => {\n                    let settings = snapshot.val();\n\n                    if (settings != null) {\n                        this.setState({\n                            name: settings.Name,\n                            gender: settings.Gender,\n                            weight: settings.Weight,\n                            height: settings.Height,\n                            age: settings.Age,\n                            cal: settings.Calories\n                        })\n                    }\n\n                })\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.authUnlisten();\n    }\n\n    handleChange(event) {\n        let field = event.target.name; // which input\n        let value = event.target.value; // what value\n\n        let changes = {}; // object to hold changes\n        changes[field] = value; // change this field\n        this.setState(changes); // update state\n    }\n\n    updateSettings() {\n        let reference = firebase.database().ref('Profile/' + this.state.subEmail + '/Author');\n        reference.on('value', (snapshot) => {\n            let settings = snapshot.val();\n\n            if (this.state.name !== undefined && this.state.name !== settings.Name) {\n                reference.child('Name').set(this.state.Name)\n            } else {\n                this.setState({\n                    name: settings.Name\n                })\n            }\n            if (this.state.age !== undefined && this.state.age !== settings.Age) {\n                reference.child('Age').set(this.state.age)\n            } else {\n                this.setState({\n                    age: settings.Age\n                })\n            }\n            if (this.state.gender !== undefined && this.state.gender !== settings.Gender) {\n                reference.child('Gender').set(this.state.gender)\n            } else {\n                this.setState({\n                    gender: settings.Gender\n                })\n            }\n            if (this.state.weight !== undefined && this.state.weight !== settings.Weight) {\n                reference.child('Weight').set(this.state.weight)\n            } else {\n                this.setState({\n                    weight: settings.Weight\n                })\n            }\n            if (this.state.height !== undefined && this.state.height !== settings.Height) {\n                reference.child('Height').set(this.state.height)\n            } else {\n                this.setState({\n                    height: settings.Height\n                })\n            }\n\n            let height = Number(this.state.height) * 2.54;\n\n            let weight = Number(this.state.weight) / 2.2;\n            if (this.state.gender === \"male\") {\n                let result = 66.47 + (13.75 * weight) + (5.0 * height - (6.75 * Number(this.state.age)));\n                reference.child('Calories').set(Math.round(result))\n                this.setState({\n                    cal: Math.round(result)\n                });\n\n            } else if (this.state.gender === \"female\") {\n                let result = 665.09 + (9.56 * weight) + (1.84 * height - (4.67 * Number(this.state.age)));\n                reference.child('Calories').set(Math.round(result))\n                this.setState({\n                    cal: Math.round(result)\n                });\n            }\n        })\n    }\n\n    cancel() {\n        return <Redirect to={ROUTES.SignIn} />\n    }\n\n    render() {\n        \n        let forms = [{ setting: \"name-settings\", label: \"name-label\", attribute: \"Name\", type: \"string\", className: \"form-control\", name: 'name', placeholder: this.state.name, title: 'Name' },\n        { setting: 'age-settings', label: 'age-label', attribute: 'Age', type: 'number', className: 'form-control', name: 'age', min: '0', step: '1.0', placeholder: this.state.age, title: 'Age' },\n        { setting: 'weight-settings', label: 'weight-label', attribute: 'Weight', type: 'number', className: 'form-control', name: 'weight', min: '0', step: '0.01', placeholder: this.state.weight, title: 'Weight' },\n        { setting: 'height-settings', label: 'height-label', attribute: 'Height', type: 'number', className: 'form-control', name: 'height', min: '0', step: '1.0', placeholder: this.state.height, title: 'Height' }\n        ]\n\n        let birthSex = [{ for:\"female\", title: \"Female\"}, \n                        { for:\"male\", title: \"Male\"}]\n    \n        let gender = birthSex.map((d, i) => {\n            return <div>\n                <FormGroup check>\n                    <Label for= {d.for}>{d.title}</Label>\n                    <input type=\"radio\"\n                        className=\"form-control\"\n                        value={d.for}\n                        name=\"gender\"\n                        onChange={(event) => { this.handleChange(event) }}>\n                    </input>\n                </FormGroup>\n            </div >\n        })\n\n        let array = forms.map((d, i) => {\n            return <div className={d.class}>\n                <div className={d.setting}>\n                    <label className={d.label} htmlFor={d.attribute}>{d.title}</label>\n                    <input type={d.type}\n                        className={d.className}\n                        name={d.name}\n                        min={d.min}\n                        step={d.step}\n                        placeholder={d.placeholder}\n                        onChange={(event) => { this.handleChange(event) }}>\n                    </input>\n                </div>\n            </div>\n        })\n\n\n        return (\n            <div>\n                <Navigation />\n                <Header />\n                <div className='text'>\n                    <div>{array[0]}</div>\n                    <div>{array[1]}</div>\n                    <div>{array[2]}</div>\n                    <div>{array[3]}</div>\n                    <div className=\"gender-settings\">\n                        <label className=\"gender-label\" htmlFor=\"gender\">Birth Sex</label>\n                        <div>{gender[0]}</div>\n                        <div>{gender[1]}</div>\n                    </div>\n                    <div className=\"save\" onClick={() => this.updateSettings()}>\n                         <button id=\"save-button\">SAVE</button>\n                     </div>\n                    <div onClick={() => this.cancel() }>\n                        <Link to={ROUTES.SignIn}><button className=\"btn btn-default\" type=\"button\">CANCEL</button></Link>\n                    </div>\n                    <p>Base metabolic rate: <span id=\"totalCals\">{this.state.cal}</span> kcal per day</p>\n                </div>\n                <Footer />\n            </div >\n        )\n    }\n}","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Header } from './Header';\nimport { Footer } from './Footer';\nimport { FormGroup, Label } from 'reactstrap';\nimport { ROUTES } from './constants';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect, Link } from 'react-router-dom';\n\nexport class SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            age: 0,\n            height: 0,\n            gender: \"\",\n            cal: 0,\n            weight: 0,\n            isLoggedIn: false\n        }\n        this.cancel = this.cancel.bind(this)\n    }\n\n\n    componentWillMount() {\n        this.authUnlisten = firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.setState({\n                    isLoggedIn: true\n                })\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.authUnlisten();\n    }\n\n    handleSignUp() {\n        if (this.state.email === '' || this.state.password === '' || this.state.fullName === ''\n            || this.state.userName === '' || this.state.weight === '' || this.state.weight.includes(\"e\")) {\n            return;\n        } else {\n            firebase.auth().createUserWithEmailAndPassword(this.state.email,\n                this.state.password)\n                .then(this.handleAdd())\n                .catch()\n        }\n    }\n\n    handleChange(event) {\n        let field = event.target.name; // which input\n        let value = event.target.value; // what value\n\n        let changes = {}; // object to hold changes\n        changes[field] = value; // change this field\n        this.setState(changes); // update state)\n    }\n\n    handleAdd() {\n        let email = this.state.email;\n        let subEmail = email.substr(0, email.indexOf('@'));\n\n\n        let height = Number(this.state.height) * 2.54;\n        let weight = Number(this.state.weight) / 2.2;\n        let result;\n        if (this.state.gender === \"male\") {\n            result = Math.round(66.47 + (13.75 * weight) + (5.0 * height - (6.75 * Number(this.state.age))));\n        } else if (this.state.gender === \"female\") {\n            result = Math.round(665.09 + (9.56 * weight) + (1.84 * height - (4.67 * Number(this.state.age))));\n        }\n\n        let reference = firebase.database().ref('Profile/');\n        let newData = {\n            Author: {\n                Name: this.state.name,\n                Age: this.state.age,\n                Gender: this.state.gender,\n                Calories: result,\n                Weight: this.state.weight,\n                Height: this.state.height\n            }\n        }\n        reference.child(subEmail).set(newData)\n    }\n\n    cancel() {\n        return <Redirect to={ROUTES.SignIn} />\n    }\n\n    render() {\n        if (this.state.isLoggedIn === true) {\n            return <Redirect to={ROUTES.Home} />\n        }\n\n        let forms = [{ className: \"email-label\", attribute: \"email\", title: \"Email\", type: \"text\", },\n        { className: \"password-label\", attribute: \"password\", title: \"Password - must be at least 6 characters long\", type: \"password\" },\n        { className: \"name-label\", attribute: 'name', title: \"Full Name\", type: 'text' },\n        { className: \"age-label\", attribute: \"age\", title: \"Age\", type: 'number', min: '0', step: '1.0' },\n        { className: \"weight-label\", attribute: \"weight\", title: \"Weight (lbs)\", type: 'number', min: '0', step: '0.01' },\n        { className: \"height-label\", attribute: \"height\", title: \"Height (inches)\", type: 'number', min: '0', step: '1.0' }]\n\n        let array = forms.map((d, i) => {\n            return <div>\n                <label className={d.className} htmlFor={d.attribute}>{d.title}</label>\n                <input type={d.type}\n                    className=\"form-control\"\n                    required\n                    name={d.attribute}\n                    min={d.min}\n                    step={d.step}\n                    onChange={(event) => { this.handleChange(event) }}>\n                </input>\n            </div>\n        })\n\n        let birthSex = [{ for: \"female\", title: \"Female\" },\n        { for: \"male\", title: \"Male\" }]\n\n        let gender = birthSex.map((d, i) => {\n            return <div>\n                <FormGroup check>\n                    <Label for={d.for}>{d.title}</Label>\n                    <input type=\"radio\"\n                        className=\"form-control\"\n                        value={d.for}\n                        name=\"gender\"\n                        onChange={(event) => { this.handleChange(event) }}>\n                    </input>\n                </FormGroup>\n            </div >\n        })\n\n        return (\n            <div>\n                <Header />\n                <div className=\"text\">\n                    <p>Please fill out this entire form in order to have access to Fitness Tracker!</p>\n                    <div>{array[0]}</div>\n                    <div>{array[1]}</div>\n                    <div>{array[2]}</div>\n                    <div>{array[3]}</div>\n                    <label className=\"gender-label\" htmlFor=\"gender\">Birth Sex</label>\n                        <div>{gender[0]}</div>\n                        <div>{gender[1]}</div>\n                    <div>{array[4]}</div>\n                    <div>\n                        {array[5]}\n                        <p>NOTE: 12 inches = 1 foot</p>\n                    </div>\n                    <div onClick={() => this.handleSignUp()}>\n                        <button type=\"submit\" className=\"btn btn-primary\">CREATE AN ACCOUNT</button>\n                    </div>\n                    <div onClick={() => this.cancel()}>\n                        <Link to={ROUTES.SignIn}><button className=\"btn btn-default\" type=\"button\">CANCEL</button></Link>\n                    </div>\n                </div>\n                <Footer />\n            </div >\n        );\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { ROUTES } from './constants';\nimport { SignIn } from './SignIn'\nimport { Home } from './Home'\nimport { Exercise } from './Exercise'\nimport { InputTable } from './InputTable'\nimport { Settings } from './Settings'\nimport { SignUp } from './SignUp'\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n\n        <Router>\n          <Switch>\n            <Route exact path={ROUTES.SignIn} component={SignIn} />\n            <Route path={ROUTES.SignUp} component={SignUp} />\n            <Route path={ROUTES.Home} component={Home} />\n            <Route path={ROUTES.Exercise} component={Exercise} />\n            <Route path={ROUTES.Table} component={InputTable} />\n            <Route path={ROUTES.Settings} component={Settings} />\n            <Redirect to={ROUTES.SignIn} />\n            </Switch>\n        </Router>\n\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nvar config = {\n    apiKey: \"AIzaSyA7yTPLobAKgsjLti44a22WCrtXrXiAkKA\",\n    authDomain: \"fitness-tracker-b9bb3.firebaseapp.com\",\n    databaseURL: \"https://fitness-tracker-b9bb3.firebaseio.com\",\n    projectId: \"fitness-tracker-b9bb3\",\n    storageBucket: \"fitness-tracker-b9bb3.appspot.com\",\n    messagingSenderId: \"1059127201149\"\n};\n\nfirebase.initializeApp(config);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}