{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","HashRouter","className","Route","exact","path","component","Home","Calorie","Exercise","Component","reactstrap_es","tabs","tag","Link","to","active","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","gender","age","height","weight","calories","changeNum","bind","assertThisInitialized","changeGender","changeAge","changeHeight","changeWeight","calculate","event","console","log","setState","target","id","value","result","Math","round","check","type","name","onChange","for","onClick","_this2","exercise","exercises","handleClick","changeExercise","e","preventDefault","fetchData","_this3","fetch","method","headers","x-app-id","x-app-key","Content-Type","body","JSON","stringify","query","weight_kg","height_cm","then","response","json","data","catch","error","md","App_InputArea","update","App_Tablerow","InputArea","placeholder","Tablerow","exList","map","element","key","duration_min","nf_calories","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qOCQlCC,gMAGF,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYC,IAClCT,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAYE,IACpCV,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAYG,aAR5BC,cAeZH,mLAEF,OACET,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKC,MAAI,GACPd,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASE,IAAKC,IAAMC,GAAG,IAAIC,QAAM,GAAjC,SAEFlB,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASE,IAAKC,IAAMC,GAAG,aAAvB,aAEFjB,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASE,IAAKC,IAAMC,GAAG,aAAvB,cAGJjB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACdJ,EAAAC,EAAAC,cAAA,0DACCF,EAAAC,EAAAC,cAAA,4mBAUAF,EAAAC,EAAAC,cAAA,o0BA3BSU,aA8CbF,cACJ,SAAAA,EAAYS,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAb,IACjBU,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAX,GAAAgB,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,OAAQ,GACRC,IAAK,EACLC,OAAQ,EACRC,OAAQ,EACRC,SAAW,GAEfZ,EAAKa,UAAYb,EAAKa,UAAUC,KAAfb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACjBA,EAAKgB,aAAchB,EAAKgB,aAAaF,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACnBA,EAAKiB,UAAYjB,EAAKiB,UAAUH,KAAfb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACjBA,EAAKkB,aAAelB,EAAKkB,aAAaJ,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACpBA,EAAKmB,aAAenB,EAAKmB,aAAaL,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACpBA,EAAKoB,UAAYpB,EAAKoB,UAAUN,KAAfb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAdAA,yEAgBTqB,yCAIRC,QAAQC,IAAIpB,KAAKI,MAAME,KACvBa,QAAQC,IAAIpB,KAAKa,aAAa,yCAEnBK,GACXlB,KAAKqB,SAAS,CAAChB,OAAQa,EAAMI,OAAOC,uCAE5BL,GACRlB,KAAKqB,SAAS,CAACf,IAAKY,EAAMI,OAAOE,6CAEtBN,GACXlB,KAAKqB,SAAS,CAACd,OAAQW,EAAMI,OAAOE,6CAEzBN,GACXlB,KAAKqB,SAAS,CAACb,OAAQU,EAAMI,OAAOE,0CAE5BN,GACR,IAAIO,EACAlB,EAA6B,KAApBP,KAAKI,MAAMG,OACpBC,EAASR,KAAKI,MAAMI,OAAS,IACP,SAAtBR,KAAKI,MAAMC,OACboB,EAAS,MAAS,MAAQjB,GAAW,EAAMD,EAAU,KAAOP,KAAKI,MAAME,KACxC,WAAtBN,KAAKI,MAAMC,SACpBoB,EAAS,OAAU,KAAOjB,GAAW,KAAOD,EAAU,KAAOP,KAAKI,MAAME,MAE1EN,KAAKqB,SAAS,CAACZ,SAAUiB,KAAKC,MAAMF,sCAGpC,OACEhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKC,MAAI,GACPd,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASE,IAAKC,IAAMC,GAAG,KAAvB,SAEFjB,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASE,IAAKC,IAAMC,GAAG,YAAYC,QAAM,GAAzC,aAEFlB,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASE,IAAKC,IAAMC,GAAG,aAAvB,cAIJjB,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWsC,OAAK,GACdnD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOuC,KAAK,QAAQC,KAAK,SAASP,GAAG,SAASQ,SAAU/B,KAAKa,eAC7DpC,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAO0C,IAAI,UAAX,WAEFvD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWsC,OAAK,GACdnD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOuC,KAAK,QAAQC,KAAK,SAASP,GAAG,OAAOQ,SAAU/B,KAAKa,eAC3DpC,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAO0C,IAAI,QAAX,SAEFvD,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAO0C,IAAI,OAAX,OACEvD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOiC,GAAG,MAAMM,KAAK,SAASE,SAAU/B,KAAKc,YAD/C,UAKFrC,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAO0C,IAAI,UAAX,UACEvD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOiC,GAAG,SAASM,KAAK,SAASE,SAAU/B,KAAKe,eADlD,iCAKFtC,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAO0C,IAAI,UAAX,UACEvD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOiC,GAAG,SAASM,KAAK,SAASE,SAAU/B,KAAKgB,eADlD,cAKFvC,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQ2C,QAASjC,KAAKiB,WAAtB,UACAxC,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAO0C,IAAI,SACTvD,EAAAC,EAAAC,cAAA,UAAQ4C,GAAG,SAAX,wBACyB9C,EAAAC,EAAAC,cAAA,QAAM4C,GAAG,aAAavB,KAAKI,MAAMK,UAD1D,4BA5FQpB,aAwGhBD,cACJ,SAAAA,EAAYQ,GAAO,IAAAsC,EAAA,OAAApC,OAAAC,EAAA,EAAAD,CAAAE,KAAAZ,IACjB8C,EAAApC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAV,GAAAe,KAAAH,KAAMJ,KACDQ,MAAQ,CACX+B,SAAW,2BACXC,UAAW,IAEbF,EAAKG,YAAcH,EAAKG,YAAY1B,KAAjBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAoC,KACnBA,EAAKI,eAAiBJ,EAAKI,eAAe3B,KAApBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAoC,KAPLA,8EAUJhB,GACblB,KAAKqB,SAAS,CAACc,SAAUjB,EAAMI,OAAOE,4CAG5Be,GACVA,EAAEC,iBACFxC,KAAKyC,wDAILzC,KAAKyC,gDAII,IAAAC,EAAA1C,KACT,OAAO2C,MAAM,uDAAwD,CACnEC,OAAQ,OACRC,QAAS,CACPC,WAAY,WACZC,YAAa,mCACbC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAASpD,KAAKI,MAAM+B,SACpB9B,OAAU,SACVgD,UAAa,KACbC,UAAa,OACbhD,IAAO,OAGViD,KAAK,SAASC,GACb,OAAOA,EAASC,SAEjBF,KAAK,SAAAG,GACJhB,EAAKrB,SAAS,CAACe,UAAWsB,EAAKtB,cAEhCuB,MAAM,SAASC,GACdzC,QAAQyC,MAAMA,sCAMhB,OACEnF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKC,MAAI,GACPd,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASE,IAAKC,IAAMC,GAAG,KAAvB,SAEFjB,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASE,IAAKC,IAAMC,GAAG,aAAvB,aAEFjB,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASE,IAAKC,IAAMC,GAAG,YAAYC,QAAM,GAAzC,cAIJlB,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKuE,GAAI,GACPpF,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAO0C,IAAI,gBAAX,6BACAvD,EAAAC,EAAAC,cAACmF,EAAD,CAAWC,OAAQ/D,KAAKsC,kBAE1B7D,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQ2C,QAASjC,KAAKqC,aAAtB,aAIN5D,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,+BAGJF,EAAAC,EAAAC,cAACqF,EAAD,CAAU5B,UAAWpC,KAAKI,MAAMgC,qBAvFnB/C,aA8FjB4E,mLAEF,OACExF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOuC,KAAK,WAAWC,KAAK,OAAOP,GAAG,eAAeQ,SAAU/B,KAAKJ,MAAMmE,OAAQG,YAAY,iCAH5E7E,aAQlB8E,mLAEF,IACIC,EADiBpE,KAAKJ,MAAMwC,UACJiC,IAAI,SAAAC,GAC9B,OACE7F,EAAAC,EAAAC,cAAA,MAAI4F,IAAKD,GACP7F,EAAAC,EAAAC,cAAA,UAAK2F,EAAQxC,MACbrD,EAAAC,EAAAC,cAAA,UAAK2F,EAAQE,cACb/F,EAAAC,EAAAC,cAAA,UAAK2F,EAAQG,gBAInB,OACEhG,EAAAC,EAAAC,cAAA,aACGyF,UAdc/E,aAoBRb,IC3RKkG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASC,OAAOvG,EAAAC,EAAAC,cAACsG,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/B,KAAK,SAAAgC,GACjCA,EAAaC","file":"static/js/main.d834e444.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { HashRouter, Route, Link} from 'react-router-dom';\nimport { Container, Row, Col, Nav, NavItem, NavLink, Dropdown, DropdownItem, DropdownToggle, DropdownMenu, Button, Form, FormGroup, Label, Input, FormText, Table } from 'reactstrap';\nimport 'whatwg-fetch';\nimport _ from 'lodash';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <HashRouter>\n        <div className=\"container\">\n          <Route exact path=\"/\" component={ Home } />\n          <Route path=\"/calories\" component={ Calorie } />\n          <Route path=\"/exercise\" component={ Exercise } />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink tag={Link} to=\"/\" active>Home</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/calories\">Calories</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/exercise\">Exercise</NavLink>\n          </NavItem>\n        </Nav>\n        <div className=\"section\">\n         <h1>Project Idea/Inspiration: Exercise/Nutrition</h1>\n          <p>\n              Nutrition and exercise are very important aspects of life. \n              Any healthy individual would be mindful of how they eat, and exercise on a daily basis. \n              However, many individuals today struggle to maintain a healthy lifestyle, \n              neglecting either their nutrition or exercise. \n              With many suffering with the consequences of an unhealthy lifestyle, \n              the need for proper information on how to take care of oneself is very helpful. \n              There is so much information on the internet for proper exercise and nutrition,\n              but it is very scattered and many people struggle to find information that is very simple and easy to consume. \n          </p>\n          <p>\n              I have a strong interest in exercise and I would love to have somewhere to track my goals as well as \n              learn more about how to continue. \n              There are many sites that help with tracking health goals. Many help with tracking calories, workouts, and weight. \n              However, I feel that there is a lack of user-friendly sites that can \n              allow users to accurately track their goals based on their own body and needs. \n              There are many factors that go into fitness goals, and a web app that would allow users to easily \n              input their information and see detailed, \n              but well-designed information to get them on track would be great. \n              Some people might also want to come up with workout routines that are specific to certain areas of the body, \n              or with other specific goals. \n              These are all issues that could be solved with a good web application. \n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Calorie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        gender: \"\",\n        age: 0,\n        height: 0,\n        weight: 0,\n        calories : 0\n    };\n    this.changeNum = this.changeNum.bind(this);\n    this.changeGender= this.changeGender.bind(this);\n    this.changeAge = this.changeAge.bind(this);\n    this.changeHeight = this.changeHeight.bind(this);\n    this.changeWeight = this.changeWeight.bind(this);\n    this.calculate = this.calculate.bind(this);\n  }  \n  changeNum(event) {\n \n  }\n  changeCals() {\n    console.log(this.state.age);\n    console.log(this.changeGender(3));\n  }\n  changeGender(event) {\n    this.setState({gender: event.target.id});\n  }\n  changeAge(event) {\n    this.setState({age: event.target.value});\n  }\n  changeHeight(event) {\n    this.setState({height: event.target.value});\n  }\n  changeWeight(event) {\n    this.setState({weight: event.target.value});\n  }\n  calculate(event) {\n    let result;\n    let height = this.state.height * 2.54;\n    let weight = this.state.weight / 2.2;\n    if (this.state.gender === \"male\") {\n      result = 66.47 + (13.75 * weight) + (5.0 * height - (6.75 * this.state.age));\n    } else if (this.state.gender === \"female\") {\n      result = 665.09 + (9.56 * weight) + (1.84 * height - (4.67 * this.state.age));\n    }\n    this.setState({calories: Math.round(result)});\n  }\n  render() {\n    return(\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink tag={Link} to=\"/\">Home</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/calories\" active>Calories</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/exercise\">Exercise</NavLink>\n          </NavItem>\n        </Nav>\n\n        <Form>\n          <FormGroup check>\n            <Input type=\"radio\" name=\"gender\" id=\"female\" onChange={this.changeGender}/>\n            <Label for=\"female\">female</Label>\n          </FormGroup>\n          <FormGroup check>\n            <Input type=\"radio\" name=\"gender\" id=\"male\" onChange={this.changeGender}/>\n            <Label for=\"male\">male</Label>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"age\">Age:\n              <Input id=\"age\" type=\"number\" onChange={this.changeAge}/>\n                      years\n            </Label>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"height\">Height:\n              <Input id=\"height\" type=\"number\" onChange={this.changeHeight}/>\n                      in inches (12 inches=1 foot)\n            </Label>\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"weight\">Weight:\n              <Input id=\"weight\" type=\"number\" onChange={this.changeWeight}/>\n                      in pounds\n            </Label>\n          </FormGroup>\n          <Button onClick={this.calculate}>Submit</Button>\n          <FormGroup>\n            <Label for=\"total\">\n              <output id=\"total\">\n                  Base metabolic rate: <span id=\"totalCals\">{this.state.calories}</span> kcal per day\n              </output>\n            </Label>\n          </FormGroup>\n          \n        </Form>\n      </div>      \n    );\n  }\n}\n\nclass Exercise extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      exercise : 'jumproped for 30 minutes',\n      exercises: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.changeExercise = this.changeExercise.bind(this);\n  }\n\n  changeExercise(event) {\n    this.setState({exercise: event.target.value});\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.fetchData();\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n\n  fetchData(){\n    return fetch('https://trackapi.nutritionix.com/v2/natural/exercise', {\n      method: 'post',\n      headers: {\n        'x-app-id': 'bfbe68de',\n        'x-app-key': '956c67f76ec3a67a0db5f5ab7f998b33',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'query': this.state.exercise,\n        'gender': 'female',\n        'weight_kg': 72.5,\n        'height_cm': 167.64,\n        'age': 30\n      })\n    })\n    .then(function(response) {\n      return response.json();\n    })\n    .then(data => {\n      this.setState({exercises: data.exercises});\n    })\n    .catch(function(error) {\n      console.error(error);\n    }); \n  }\n\n\n  render() {\n    return (\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink tag={Link} to=\"/\">Home</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/calories\">Calories</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/exercise\" active>Exercise</NavLink>\n          </NavItem>\n        </Nav>\n\n        <Form>\n          <Row>\n            <Col md={6}>\n              <FormGroup>\n                <Label for=\"exerciseText\">Tell me how you exercised</Label>\n                <InputArea update={this.changeExercise}/>\n              </FormGroup>\n              <Button onClick={this.handleClick}>Submit</Button>\n            </Col>\n          </Row>\n        </Form>\n        <Table>\n          <thead>\n            <tr>\n              <th>Exercise Name</th>\n              <th>Duration</th>\n              <th>Calories Burned</th>\n            </tr>\n          </thead>\n          <Tablerow exercises={this.state.exercises}/>\n        </Table>\n      </div>\n    );\n  }\n}\n\nclass InputArea extends Component {\n  render() {\n    return(\n      <Input type=\"textarea\" name=\"text\" id=\"exerciseText\" onChange={this.props.update} placeholder='walked for 30 minutes'/>\n    );\n  }\n}\n\nclass Tablerow extends Component {\n  render() {\n    let totalExercises = this.props.exercises;\n    let exList = totalExercises.map(element => {\n      return(\n        <tr key={element}>\n          <td>{element.name}</td>\n          <td>{element.duration_min}</td>\n          <td>{element.nf_calories}</td>\n        </tr>\n      );\n    });\n    return(\n      <tbody>\n        {exList}\n      </tbody>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}